// Узнаём содержимое выбранного элемента
// $('селектор').html();
// alert($('h3').text());
// $('селектор').html('Новое содержимое');

// $('селектор').wrap('<нач_тэг><кон_тэг>');
$('.article-list').click(function (event) {
  $(event.target).wrap('<del></del>');
});

// Добавим указанный класс выбранному элементу
// $('селектор').addClass('имяКласса');

// Удалим указанный класс у выбранного элемента
// $('селектор').removeClass('имяКласса');

// При первом вызове указанный класс будет добавлен, а втором – удалён
// $('селектор').toggleClass('имяКласса');

$('#but1').click(function () {
  $('.article-text').html('Для выбора элементов используются селекторы CSS. Выбор осуществляется с помощью функции $(). При вызове функция $() возвращает новый экземпляр объекта jQuery, который оборачивает ноль или более элементов DOM, и позволяет взаимодействовать с ними различными способами.');
  $('.active').removeClass('active')
  $(event.target).addClass('active')
});

$('#but2').click(function (event) {
  $('.article-text').html('jQuery – лучшее, что случалось с вами!');
  $('.active').removeClass('active')
  $(event.target).addClass('active')
});

$('#but3').click(function (event) {
  $('a').html(Date());
  $('.active').removeClass('active')
  $(event.target).addClass('active')
});

// Узнаём значение произвольного атрибута
// $('селектор').attr('атрибут');
// Установим новое значение произвольному атрибуту
// $('селектор').attr('атрибут', 'новое значение');
// Удалим атрибут
// $('селектор').removeAttr('атрибут');

$('#but4').click(function () {
  alert($('a').attr('href'));
  $('.article-list').attr('type', 'square')
  $('a').removeAttr('title')
});

// Добавим текст перед внутренним содержимым элемента
// $('селектор').prepend('произвольныйТекст');
// Добавим текст после внутреннего содержимого элемента
// $('селектор').append('произвольныйТекст');

$('h3').click(function (){
  $('h3').append('<div style="font-weight: 200; font-size: 16px">Выполнение различных сценариев возможно только после окончания загрузки структуры документа document, когда браузер преобразует html-код страницы в дерево DOM. Управление процессом загрузки обеспечивает конструкция ready().</div>')
});






